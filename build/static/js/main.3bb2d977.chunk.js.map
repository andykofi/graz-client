{"version":3,"sources":["actions/accountActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreatePayment.js","components/Project/ViewMembers.js","components/Project/CreateAward.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddAccount.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateAccount.js","components/Layout/Landing.js","components/UserManager/Register.js","components/UserManager/Login.js","components/Project/Members.js","components/Project/Award.js","components/Project/Payment.js","securityUtils/SecureRoute.js","components/Layout/FooterPage.js","components/Project/Donation.js","App.js","reportWebVitals.js","index.js"],"names":["createAccount","account","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteAccount","react_default","createElement","className","accountIdentifier","balance","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreatePayment","Fragment","ViewMembers","CreateAward","Dashboard","getAccounts","accounts","Project_CreatePayment","Project_ViewMembers","Project_CreateAward","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","firstName","userIsNotAuthenticated","data-toggle","data-target","AddAccount","classCallCheck","_super","call","deposit","award","description","start_date","award_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","combineReducers","length","undefined","action","objectSpread","filter","initalState","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateAccount","_nextProps$account","match","params","getAccount","updateAccount","_ref3","_callee3","_context3","_x3","Landing","Register","lastName","tel","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","Members","Award","Payment","component","otherProps","objectWithoutProperties","react_router","assign","render","FooterPage","Date","getFullYear","Donation","jwtToken","decoded_jwtToken","currentTime","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Layout_FooterPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3bb2d977.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {GET_ACCOUNTS, GET_ERRORS,GET_ACCOUNT,DELETE_ACCOUNT} from \"./types\";\n\nexport const createAccount = (account, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/account\",account);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n} catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAccounts = () => async dispatch => {\n  const res = await axios.get(\"/api/account/all\");\n  dispatch({\n    type: GET_ACCOUNTS,\n    payload: res.data\n  });\n};\n\nexport const getAccount = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/account/${id}`);\n    dispatch({\n      type: GET_ACCOUNT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteAccount = id => async dispatch => {\n  if (\n      window.confirm(\n          \"Are you sure? This will delete the project and all the data related to it\"\n      )\n  ) {\n    await axios.delete(`/api/account/${id}`);\n    dispatch({\n      type: DELETE_ACCOUNT,\n      payload: id\n    });\n  }\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const GET_ACCOUNT = \"GET_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteAccount } from \"../../actions/accountActions\";\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteAccount(id);\n    };\n    render() {\n        const { account } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{account.accountIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>Balance</h3>\n                            <h3>{account.balance}</h3>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/payment/${account.accountIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateAccount/${account.accountIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\n                                    </li>\n                                </Link>\n\n                                <li className=\"list-group-item delete\"\n                                    onClick={this.onDeleteClick.bind(this, account.accountIdentifier)}\n                                >\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteAccount: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteAccount }\n)(ProjectItem);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreatePayment = ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"addAccount\" className=\"btn btn-lg btn-info\">\n                Payment\n            </Link>\n        </React.Fragment>\n     \n    )\n}\n\nexport default CreatePayment;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ViewMembers = ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"members\" className=\"btn btn-lg btn-info\">\n                View Members\n            </Link>\n        </React.Fragment>\n\n    )\n}\n\nexport default ViewMembers;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreateAward= ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"award\" className=\"btn btn-lg btn-info\">\n              Award\n            </Link>\n        </React.Fragment>\n\n    )\n}\n\nexport default CreateAward;\n","import React, { Component } from 'react';\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreatePayment from './Project/CreatePayment';\nimport { connect } from \"react-redux\";\nimport { getAccounts } from \"../actions/accountActions\";\nimport PropTypes from \"prop-types\";\nimport ViewMembers from \"./Project/ViewMembers\";\nimport CreateAward from \"./Project/CreateAward\";\n\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getAccounts();\n    }\n\n    render() {\n\n        const { accounts } = this.props.account;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Membership Account </h1>\n                            <br />\n                            <CreatePayment /> <ViewMembers /> <CreateAward/>\n                            <br />\n                            <hr />\n                            {accounts.map(account => (\n                                <ProjectItem key={account.id} account={account} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    account: PropTypes.object.isRequired,\n    getAccounts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    account: state.account\n});\n\nexport default connect(\n    mapStateToProps,\n    { getAccounts }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // decode token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    render() {\n        const { validToken, user } = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.firstName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Graz Ghanain Diaspora Record Keeper\n                    </Link>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#mobile-nav\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps,\n    { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createAccount  } from \"../../actions/accountActions\";\nimport classnames from \"classnames\";\n\nclass AddAccount extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            accountIdentifier: \"\",\n            deposit: \"\",\n            balance: \"\",\n            award: \"\",\n            description: \"\",\n            start_date: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            accountIdentifier: this.state.accountIdentifier,\n            deposit: this.state.deposit,\n            balance: this.state.balance,\n            award: this.state.award,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            award_date: this.state.award_date\n        };\n        this.props.createAccount(newProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h6 className=\"display-4 text-center\">Membership Account Form</h6>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.accountIdentifier\n                                            })}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"accountIdentifier\"\n                                            value={this.state.accountIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.accountIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.accountIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.deposit\n                                            })}\n                                            placeholder=\"Deposit\"\n                                            name=\"deposit\"\n                                            value={this.state.deposit}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.deposit && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.deposit}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.balance\n                                            })}\n                                            placeholder=\"Balance\"\n                                            name=\"balance\"\n                                            value={this.state.balance}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.balance&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.balance}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.award\n                                            })}\n                                            placeholder=\"Award\"\n                                            name=\"award\"\n                                            value={this.state.award}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.award&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.award}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                            <textarea\n                               className={classnames(\"form-control form-control-lg\", {\n                              \"is-invalid\": errors.description\n                              })}\n                              placeholder=\"Award Description\"\n                              name=\"description\"\n                              value={this.state.description}\n                              onChange={this.onChange}\n                            />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Award Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.award_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddAccount.propTypes = {\n    createAccount: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { createAccount }\n)(AddAccount);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}","import { GET_ACCOUNTS,GET_ACCOUNT ,DELETE_ACCOUNT} from \"../actions/types\";\n\nconst initialState = {\n    accounts: [],\n    account: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ACCOUNTS:\n            return {\n                ...state,\n                accounts: action.payload\n            };\n        case GET_ACCOUNT:\n            return {\n                ...state,\n                account: action.payload\n            };\n        case DELETE_ACCOUNT:\n            return {\n                ...state,\n                accounts: state.accounts.filter(\n                    account => account.accountIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  account: accountReducer,\n  security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React, { Component } from \"react\";\nimport { getAccount, createAccount} from \"../../actions/accountActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateAccount extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            accountIdentifier: \"\",\n            deposit: \"\",\n            balance: \"\",\n            award: \"\",\n            description: \"\",\n            start_date: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        const {\n            id,\n            accountIdentifier,\n            deposit,\n            balance,\n            award,\n            description,\n            start_date,\n            award_date\n        } = nextProps.account;\n\n        this.setState({\n            id,\n            accountIdentifier,\n            deposit,\n            balance,\n            award,\n            description,\n            start_date,\n            award_date\n        });\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getAccount(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateAccount = {\n            id: this.state.id,\n            accountIdentifier: this.state.accountIdentifier,\n            deposit: this.state.deposit,\n            balance: this.state.balance,\n            award: this.state.award,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            award_date: this.state.award_date\n        };\n\n        this.props.createAccount(updateAccount, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Account form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.accountIdentifier\n                                        })}\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.accountIdentifier}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.accountIdentifier && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.accountIdentifier}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.deposit\n                                        })}\n                                        placeholder=\"Deposit\"\n                                        name=\"deposit\"\n                                        value={this.state.deposit}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.deposit && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.deposit}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.balance\n                                        })}\n                                        placeholder=\"Balance\"\n                                        name=\"balance\"\n                                        value={this.state.balance}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.balance&& (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.balance}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.award\n                                        })}\n                                        placeholder=\"Award\"\n                                        name=\"award\"\n                                        value={this.state.award}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.award&& (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.award}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                            <textarea\n                                className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\": errors.description\n                                })}\n                                placeholder=\"Award Description\"\n                                name=\"description\"\n                                value={this.state.description}\n                                onChange={this.onChange}\n                            />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Award Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"end_date\"\n                                        value={this.state.award_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateAccount.propTypes = {\n    getAccount: PropTypes.func.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    account: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    account: state.account.account,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getAccount, createAccount }\n)(UpdateAccount);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h3 className=\"display-5 mb-4\">\n                                    Graz Ghanaian Diaspora Record Keeper\n                                </h3>\n                                <p className=\"lead\">\n                                    Create And Manage Account\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            tel: \"\",\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            tel: this.state.tel,\n            username: this.state.username,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.firstName\n                                        })}\n                                        placeholder=\"Your First Name\"\n                                        name=\"firstName\"\n                                        value={this.state.firstName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.firstName && (\n                                        <div className=\"invalid-feedback\">{errors.firstName}</div>\n                                    )}\n                                </div>\n                                <div>\n                                <input\n                                    type=\"text\"\n                                    className={classnames(\"form-control form-control-lg\" ,{\n                                        \"is-invalid\": errors.lastName\n                                    })}\n                                    placeholder=\"Your Last Name\"\n                                    name=\"lastName\"\n                                    value={this.state.lastName}\n                                    onChange={this.onChange}\n                                />\n                                    {errors.lastName && (\n                                        <div className=\"invalid-feedback\">{errors.lastName}</div>\n                                    )}\n                               </div>\n                                <div>\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.tel\n                                        })}\n                                        placeholder=\"Your Mobile Number\"\n                                        name=\"tel\"\n                                        value={this.state.tel}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.tel && (\n                                        <div className=\"invalid-feedback\">{errors.tel}</div>\n                                    )}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { login }\n)(Login);","import React, {Component} from 'react';\n\nclass Members extends Component {\n    render() {\n        return (\n            <div>\n                <h1> All Members</h1>\n            </div>\n        );\n    }\n}\n\nexport default Members;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Award extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username:\"\",\n            award: \"\",\n            description: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h6 className=\"display-4 text-center\">Award Form</h6>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.username\n                                            })}\n                                            placeholder=\"UserName / Email\"\n                                            name=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.username&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.username}\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.award\n                                            })}\n                                            placeholder=\"Award\"\n                                            name=\"award\"\n                                            value={this.state.award}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.award&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.award}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                            <textarea\n                                className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\": errors.description\n                                })}\n                                placeholder=\"Award Description\"\n                                name=\"description\"\n                                value={this.state.description}\n                                onChange={this.onChange}\n                            />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Award Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.award_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAward.propTypes = {\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(Award);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Payment extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\"\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Payment</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Amount\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Paypal Id\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPayment.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { }\n)(Payment);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={props =>\n            security.validToken === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React from \"react\";\nimport \"./footer.css\";\nimport { Link } from \"react-router-dom\";\nconst FooterPage = () => {\n    return (\n        <div className=\"main-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    {/* Column1 */}\n                    <div className=\"col\">\n                        <h4>Useful Links</h4>\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"donation\">\n                                    Donate\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    {/* Column2 */}\n                    <div className=\"col\">\n                        <h4>Our Goals</h4>\n                        <ui className=\"list-unstyled\">\n                            <li>We aim to help each other</li>\n                            <li>Support the bereaved</li>\n                            <li>Birthday Celebrations</li>\n                            <li>Building bridges across all diaspora </li>\n                            <li>Help people to resettle back home</li>\n                            <li>Extend our hands to develop Ghana</li>\n                            <li>Build mutual friendship and respect to all</li>\n                        </ui>\n                    </div>\n                    {/* Column3 */}\n                    <div className=\"col\">\n                        <h4>Useful Information</h4>\n                        <ui className=\"list-unstyled\">\n                            <li>New Projects</li>\n                            <li>Donation</li>\n                            <li>Next Meeting</li>\n                        </ui>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <p className=\"col-sm\">\n                        &copy;{new Date().getFullYear()} THE GRAZ UK GHANAIAN DIASPORA | All rights reserved |\n                        Terms Of Service | Privacy\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FooterPage;","import React, {Component} from 'react';\n\nclass Donation extends Component {\n    render() {\n        return (\n            <div>\n               The donation page\n            </div>\n        );\n    }\n}\n\nexport default Donation;","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddAccount from './components/Project/AddAccount';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateAccount from \"./components/Project/UpdateAccount\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManager/Register\";\nimport Login from \"./components/UserManager/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport Members from \"./components/Project/Members\";\nimport Award from \"./components/Project/Award\";\nimport Payment from \"./components/Project/Payment\";\nimport {logout} from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\nimport FooterPage from \"./components/Layout/FooterPage\";\nimport Donation from './components/Project/Donation';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        store.dispatch(logout());\n        window.location.href = \"/\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Header/>\n                    {\n                        //Public Routes<\n                    }\n                    <Route exact path=\"/\" component={Landing}/>\n                    <Route exact path=\"/register\" component={Register}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/donation\" component={Donation}/>\n                    {\n                        //Private Routes\n                    }\n                    <Switch>\n                    <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n                    <SecureRoute exact path=\"/addAccount\" component={AddAccount}/>\n                    <SecureRoute exact path=\"/updateAccount/:id\" component={UpdateAccount}/>\n                    <SecureRoute exact path=\"/members\" component={Members}/>\n                    <SecureRoute exact path=\"/award\" component={Award}/>\n                    <SecureRoute exact path=\"/payment\" component={Payment}/>\n                    </Switch>\n                </div>\n                <FooterPage/>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}