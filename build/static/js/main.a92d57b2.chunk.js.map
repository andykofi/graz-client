{"version":3,"sources":["actions/types.js","actions/accountActions.js","components/Project/ProjectItem.js","components/Project/CreatePayment.js","components/Project/ViewMembers.js","components/Project/CreateAward.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddAccount.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateAccount.js","components/Layout/Landing.js","components/UserManager/Register.js","components/UserManager/Login.js","components/Project/Members.js","components/Project/Award.js","components/Project/Payment.js","securityUtils/SecureRoute.js","components/Layout/FooterPage.js","components/Project/Donation.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_ACCOUNTS","GET_ACCOUNT","DELETE_ACCOUNT","SET_CURRENT_USER","createAccount","account","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteAccount","this","className","accountIdentifier","balance","to","onClick","bind","Component","connect","window","confirm","delete","CreatePayment","Fragment","ViewMembers","CreateAward","Dashboard","getAccounts","accounts","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","firstName","userIsNotAuthenticated","data-toggle","data-target","AddAccount","deposit","award","description","start_date","award_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","booleanActionPayload","combineReducers","action","filter","initalState","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateAccount","match","params","getAccount","updateAccount","Landing","Register","lastName","tel","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","Members","Award","Payment","component","otherProps","render","FooterPage","Date","getFullYear","Donation","jwtToken","decoded_jwtToken","currentTime","now","exp","App","exact","path","SecureRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92d57b2.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const GET_ACCOUNT = \"GET_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport {GET_ACCOUNTS, GET_ERRORS,GET_ACCOUNT,DELETE_ACCOUNT} from \"./types\";\n\nexport const createAccount = (account, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/account\",account);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n} catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAccounts = () => async dispatch => {\n  const res = await axios.get(\"/api/account/all\");\n  dispatch({\n    type: GET_ACCOUNTS,\n    payload: res.data\n  });\n};\n\nexport const getAccount = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/account/${id}`);\n    dispatch({\n      type: GET_ACCOUNT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteAccount = id => async dispatch => {\n  if (\n      window.confirm(\n          \"Are you sure? This will delete the project and all the data related to it\"\n      )\n  ) {\n    await axios.delete(`/api/account/${id}`);\n    dispatch({\n      type: DELETE_ACCOUNT,\n      payload: id\n    });\n  }\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteAccount } from \"../../actions/accountActions\";\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteAccount(id);\n    };\n    render() {\n        const { account } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{account.accountIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>Balance</h3>\n                            <h3>{account.balance}</h3>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/payment/${account.accountIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateAccount/${account.accountIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\n                                    </li>\n                                </Link>\n\n                                <li className=\"list-group-item delete\"\n                                    onClick={this.onDeleteClick.bind(this, account.accountIdentifier)}\n                                >\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteAccount: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteAccount }\n)(ProjectItem);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreatePayment = ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"addAccount\" className=\"btn btn-lg btn-info\">\n                Payment\n            </Link>\n        </React.Fragment>\n     \n    )\n}\n\nexport default CreatePayment;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ViewMembers = ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"members\" className=\"btn btn-lg btn-info\">\n                View Members\n            </Link>\n        </React.Fragment>\n\n    )\n}\n\nexport default ViewMembers;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CreateAward= ()=> {\n    return (\n        <React.Fragment>\n            <Link to=\"award\" className=\"btn btn-lg btn-info\">\n              Award\n            </Link>\n        </React.Fragment>\n\n    )\n}\n\nexport default CreateAward;\n","import React, { Component } from 'react';\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreatePayment from './Project/CreatePayment';\nimport { connect } from \"react-redux\";\nimport { getAccounts } from \"../actions/accountActions\";\nimport PropTypes from \"prop-types\";\nimport ViewMembers from \"./Project/ViewMembers\";\nimport CreateAward from \"./Project/CreateAward\";\n\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getAccounts();\n    }\n\n    render() {\n\n        const { accounts } = this.props.account;\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Membership Account </h1>\n                            <br />\n                            <CreatePayment /> <ViewMembers /> <CreateAward/>\n                            <br />\n                            <hr />\n                            {accounts.map(account => (\n                                <ProjectItem key={account.id} account={account} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    account: PropTypes.object.isRequired,\n    getAccounts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    account: state.account\n});\n\nexport default connect(\n    mapStateToProps,\n    { getAccounts }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // decode token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    render() {\n        const { validToken, user } = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.firstName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Graz Ghanain Diaspora Record Keeper\n                    </Link>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#mobile-nav\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps,\n    { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createAccount  } from \"../../actions/accountActions\";\nimport classnames from \"classnames\";\n\nclass AddAccount extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            accountIdentifier: \"\",\n            deposit: \"\",\n            balance: \"\",\n            award: \"\",\n            description: \"\",\n            start_date: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            accountIdentifier: this.state.accountIdentifier,\n            deposit: this.state.deposit,\n            balance: this.state.balance,\n            award: this.state.award,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            award_date: this.state.award_date\n        };\n        this.props.createAccount(newProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h6 className=\"display-4 text-center\">Membership Account Form</h6>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.accountIdentifier\n                                            })}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"accountIdentifier\"\n                                            value={this.state.accountIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.accountIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.accountIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.deposit\n                                            })}\n                                            placeholder=\"Deposit\"\n                                            name=\"deposit\"\n                                            value={this.state.deposit}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.deposit && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.deposit}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.balance\n                                            })}\n                                            placeholder=\"Balance\"\n                                            name=\"balance\"\n                                            value={this.state.balance}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.balance&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.balance}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.award\n                                            })}\n                                            placeholder=\"Award\"\n                                            name=\"award\"\n                                            value={this.state.award}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.award&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.award}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                            <textarea\n                               className={classnames(\"form-control form-control-lg\", {\n                              \"is-invalid\": errors.description\n                              })}\n                              placeholder=\"Award Description\"\n                              name=\"description\"\n                              value={this.state.description}\n                              onChange={this.onChange}\n                            />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Award Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.award_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddAccount.propTypes = {\n    createAccount: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { createAccount }\n)(AddAccount);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}","import { GET_ACCOUNTS,GET_ACCOUNT ,DELETE_ACCOUNT} from \"../actions/types\";\n\nconst initialState = {\n    accounts: [],\n    account: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ACCOUNTS:\n            return {\n                ...state,\n                accounts: action.payload\n            };\n        case GET_ACCOUNT:\n            return {\n                ...state,\n                account: action.payload\n            };\n        case DELETE_ACCOUNT:\n            return {\n                ...state,\n                accounts: state.accounts.filter(\n                    account => account.accountIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  account: accountReducer,\n  security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React, { Component } from \"react\";\nimport { getAccount, createAccount} from \"../../actions/accountActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateAccount extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            accountIdentifier: \"\",\n            deposit: \"\",\n            balance: \"\",\n            award: \"\",\n            description: \"\",\n            start_date: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        const {\n            id,\n            accountIdentifier,\n            deposit,\n            balance,\n            award,\n            description,\n            start_date,\n            award_date\n        } = nextProps.account;\n\n        this.setState({\n            id,\n            accountIdentifier,\n            deposit,\n            balance,\n            award,\n            description,\n            start_date,\n            award_date\n        });\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getAccount(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateAccount = {\n            id: this.state.id,\n            accountIdentifier: this.state.accountIdentifier,\n            deposit: this.state.deposit,\n            balance: this.state.balance,\n            award: this.state.award,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            award_date: this.state.award_date\n        };\n\n        this.props.createAccount(updateAccount, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Account form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.accountIdentifier\n                                        })}\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.accountIdentifier}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.accountIdentifier && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.accountIdentifier}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.deposit\n                                        })}\n                                        placeholder=\"Deposit\"\n                                        name=\"deposit\"\n                                        value={this.state.deposit}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.deposit && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.deposit}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.balance\n                                        })}\n                                        placeholder=\"Balance\"\n                                        name=\"balance\"\n                                        value={this.state.balance}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.balance&& (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.balance}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.award\n                                        })}\n                                        placeholder=\"Award\"\n                                        name=\"award\"\n                                        value={this.state.award}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.award&& (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.award}\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                            <textarea\n                                className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\": errors.description\n                                })}\n                                placeholder=\"Award Description\"\n                                name=\"description\"\n                                value={this.state.description}\n                                onChange={this.onChange}\n                            />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.description}\n                                        </div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Award Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"end_date\"\n                                        value={this.state.award_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateAccount.propTypes = {\n    getAccount: PropTypes.func.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    account: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    account: state.account.account,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getAccount, createAccount }\n)(UpdateAccount);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h3 className=\"display-5 mb-4\">\n                                    Graz Ghanaian Diaspora Record Keeper\n                                </h3>\n                                <p className=\"lead\">\n                                    Create And Manage Account\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            tel: \"\",\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            tel: this.state.tel,\n            username: this.state.username,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.firstName\n                                        })}\n                                        placeholder=\"Your First Name\"\n                                        name=\"firstName\"\n                                        value={this.state.firstName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.firstName && (\n                                        <div className=\"invalid-feedback\">{errors.firstName}</div>\n                                    )}\n                                </div>\n                                <div>\n                                <input\n                                    type=\"text\"\n                                    className={classnames(\"form-control form-control-lg\" ,{\n                                        \"is-invalid\": errors.lastName\n                                    })}\n                                    placeholder=\"Your Last Name\"\n                                    name=\"lastName\"\n                                    value={this.state.lastName}\n                                    onChange={this.onChange}\n                                />\n                                    {errors.lastName && (\n                                        <div className=\"invalid-feedback\">{errors.lastName}</div>\n                                    )}\n                               </div>\n                                <div>\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.tel\n                                        })}\n                                        placeholder=\"Your Mobile Number\"\n                                        name=\"tel\"\n                                        value={this.state.tel}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.tel && (\n                                        <div className=\"invalid-feedback\">{errors.tel}</div>\n                                    )}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\" ,{\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { login }\n)(Login);","import React, {Component} from 'react';\n\nclass Members extends Component {\n    render() {\n        return (\n            <div>\n                <h1> All Members</h1>\n            </div>\n        );\n    }\n}\n\nexport default Members;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Award extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username:\"\",\n            award: \"\",\n            description: \"\",\n            award_date:\"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h6 className=\"display-4 text-center\">Award Form</h6>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.username\n                                            })}\n                                            placeholder=\"UserName / Email\"\n                                            name=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.username&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.username}\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.award\n                                            })}\n                                            placeholder=\"Award\"\n                                            name=\"award\"\n                                            value={this.state.award}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.award&& (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.award}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                            <textarea\n                                className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\": errors.description\n                                })}\n                                placeholder=\"Award Description\"\n                                name=\"description\"\n                                value={this.state.description}\n                                onChange={this.onChange}\n                            />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Award Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.award_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAward.propTypes = {\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(Award);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Payment extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\"\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Payment</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Amount\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Paypal Id\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPayment.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { }\n)(Payment);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={props =>\n            security.validToken === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React from \"react\";\nimport \"./footer.css\";\nimport { Link } from \"react-router-dom\";\nconst FooterPage = () => {\n    return (\n        <div className=\"main-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    {/* Column1 */}\n                    <div className=\"col\">\n                        <h4>Useful Links</h4>\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"donation\">\n                                    Donate\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"\">\n                                    Dashboard\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    {/* Column2 */}\n                    <div className=\"col\">\n                        <h4>Our Goals</h4>\n                        <ui className=\"list-unstyled\">\n                            <li>We aim to help each other</li>\n                            <li>Support the bereaved</li>\n                            <li>Birthday Celebrations</li>\n                            <li>Building bridges across all diaspora </li>\n                            <li>Help people to resettle back home</li>\n                            <li>Extend our hands to develop Ghana</li>\n                            <li>Build mutual friendship and respect to all</li>\n                        </ui>\n                    </div>\n                    {/* Column3 */}\n                    <div className=\"col\">\n                        <h4>Useful Information</h4>\n                        <ui className=\"list-unstyled\">\n                            <li>New Projects</li>\n                            <li>Donation</li>\n                            <li>Next Meeting</li>\n                        </ui>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <p className=\"col-sm\">\n                        &copy;{new Date().getFullYear()} THE GRAZ UK GHANAIAN DIASPORA | All rights reserved |\n                        Terms Of Service | Privacy\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FooterPage;","import React, {Component} from 'react';\n\nclass Donation extends Component {\n    render() {\n        return (\n            <div>\n               The donation page\n            </div>\n        );\n    }\n}\n\nexport default Donation;","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddAccount from './components/Project/AddAccount';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport UpdateAccount from \"./components/Project/UpdateAccount\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManager/Register\";\nimport Login from \"./components/UserManager/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport Members from \"./components/Project/Members\";\nimport Award from \"./components/Project/Award\";\nimport Payment from \"./components/Project/Payment\";\nimport {logout} from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\nimport FooterPage from \"./components/Layout/FooterPage\";\nimport Donation from './components/Project/Donation';\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        store.dispatch(logout());\n        window.location.href = \"/\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Header/>\n                    {\n                        //Public Routes<\n                    }\n                    <Route exact path=\"/\" component={Landing}/>\n                    <Route exact path=\"/register\" component={Register}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/donation\" component={Donation}/>\n                    {\n                        //Private Routes\n                    }\n                    <Switch>\n                    <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n                    <SecureRoute exact path=\"/addAccount\" component={AddAccount}/>\n                    <SecureRoute exact path=\"/updateAccount/:id\" component={UpdateAccount}/>\n                    <SecureRoute exact path=\"/members\" component={Members}/>\n                    <SecureRoute exact path=\"/award\" component={Award}/>\n                    <SecureRoute exact path=\"/payment\" component={Payment}/>\n                    </Switch>\n                </div>\n                <FooterPage/>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}